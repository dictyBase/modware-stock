name: Build
on:
  push:
    branches:
      - develop
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      arangodb:
        image: arangodb:3.6.3
        env:
          ARANGO_ROOT_PASSWORD: rootpass
        ports:
          - 8529/tcp
    steps:
      - name: set up golang
        uses: actions/setup-go@v1
        with:
          go-version: 1.13.12
      - name: check out code
        uses: actions/checkout@v2
      - name: unit test
        run: go test -covermode=atomic -coverprofile=profile.cov -v ./...
        env:
          ARANGO_USER: root
          ARANGO_PASS: rootpass
          ARANGO_HOST: localhost
          ARANGO_PORT: ${{ job.services.arangodb.ports[8529] }}
          GOPROXY: https://proxy.golang.org
      - name: upload coverage to codecov
        uses: codecov/codecov-action@v1.0.6
        with:
          file: ./profile.cov
          token: ${{ secrets.CODECOV_TOKEN }}
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: set up golang
        uses: actions/setup-go@v1
        with:
          go-version: 1.13.12
      - name: check out code
        uses: actions/checkout@v1
      - name: build docker image
        run: docker build -t dictybase/modware-stock:develop-$(git rev-parse --short HEAD) -f build/package/Dockerfile .
      - name: login to docker hub
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: push to docker hub
        run: docker push dictybase/modware-stock:develop-$(git rev-parse --short HEAD)
