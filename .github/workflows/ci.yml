name: Continuous integration
on:
  push:
    branches:
      - develop
jobs:
  test:
    runs-on: ubuntu-20.04
    services:
      arangodb:
        image: arangodb:3.8.7
        env:
          ARANGO_ROOT_PASSWORD: rootpass
        ports:
          - 8529/tcp
    steps:
      - name: set up golang
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: check out code
        uses: actions/checkout@v3
      - name: unit test
        run: go test -covermode=atomic -coverprofile=profile.cov -v ./...
        env:
          ARANGO_USER: root
          ARANGO_PASS: rootpass
          ARANGO_HOST: localhost
          ARANGO_PORT: ${{ job.services.arangodb.ports[8529] }}
          GOPROXY: https://proxy.golang.org
      - name: upload coverage to codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./profile.cov
          token: ${{ secrets.CODECOV_TOKEN }}
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: set up golang
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: check out code
        uses: actions/checkout@v3
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2
      - name: cache docker layers
        uses: actions/cache@v3.3.0
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: log into dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: get short sha
        id: type
        run: |
          sha=$(git rev-parse --short HEAD)
          echo ::set-output name=id::${sha}
      - name: docker build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          file: build/package/Dockerfile
          tags: dictybase/modware-stock:develop-${{ steps.type.outputs.id }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
